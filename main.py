from pywebio import start_server
from pywebio.input import *
from pywebio.output import *
from pywebio.session import run_async, run_js

from authentication import authenticate_user
from chat import chat_msgs, online_users, refresh_msg
from registration import register_user


def registration_form():
    user_data = input_group("–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è", [
        input("Username", name="username", required=True),
        input("First Name", name="first_name", required=True),
        input("Last Name", name="last_name", required=True),
    ])

    username = user_data["username"]
    first_name = user_data["first_name"]
    last_name = user_data["last_name"]

    put_text(f"–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!\n\nUsername: {username}\nFirst Name: {first_name}\nLast Name: {last_name}")


async def main():
    put_markdown("–í–∏ –ø–æ—Ç—Ä–∞–ø–∏–ª–∏ –≤ –æ–Ω–ª–∞–π–Ω —á–∞—Ç!")

    user_id = user.id
    user = authenticate_user(user_id)

    if user is None:
        username = "username"
        first_name = "first_name"
        last_name = "last_name"

        register_user(user_id, username, first_name, last_name)
        user = authenticate_user(user_id)

    nickname = user.username
    online_users.add(nickname)

    msg_box = put_scope(name="chat_box")
    put_scrollable(msg_box, height=300, keep_bottom=True)

    nickname = await input("–í–æ–π—Ç–∏ –≤ —á–∞—Ç", required=True, placeholder="–í–∞—à –Ω—ñ–∫",
                           validate=lambda
                               n: "–¢–∞–∫–∏–π –Ω—ñ–∫ –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è!" if n in online_users or n == 'üì¢' else None)
    online_users.add(nickname)

    chat_msgs.append(('üì¢', f'`{nickname}` –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ —á–∞—Ç—É!'))
    put_text(f'üì¢ `{nickname}` –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ —á–∞—Ç—É')

    refresh_task = run_async(refresh_msg(nickname, msg_box))

    while True:
        data = await input_group("üí≠ –ù–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è", [
            input(placeholder="–¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ...", name="msg"),
            actions(name="cmd", buttons=["–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏", {'label': "–í–∏–π—Ç–∏ –∑ —á–∞—Ç—É", 'type': 'cancel'}])
        ], validate=lambda m: ('msg', "–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è!") if m["cmd"] == "–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏" and not m[
            'msg'] else None)

        if data is None:
            break

        put_text(f"`{nickname}`: {data['msg']}")
        chat_msgs.append((nickname, data['msg']))

    refresh_task.close()

    online_users.remove(nickname)
    toast("–í–∏ –≤–∏—à–π–ª–∏ –∑ —á–∞—Ç—É!")
    put_text(f'üì¢ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á `{nickname}` –ø–æ–∫–∏–Ω—É–≤ —á–∞—Ç!')
    chat_msgs.append(('üì¢', f'–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á `{nickname}` –ø–æ–∫–∏–Ω—É–≤ —á–∞—Ç!'))

    put_buttons(['–ü–µ—Ä–µ–∑–∞–π—Ç–∏'], onclick=lambda btn: run_js('window.location.reload()'))


if __name__ == "__main__":
    start_server(main, debug=True, port=8080, cdn=False)
